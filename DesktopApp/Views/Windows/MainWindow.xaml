<Window x:Class="DesktopApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"       
        xmlns:uc="clr-namespace:DesktopApp.UserControls"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"        
        Height="720" Width="1280" WindowStartupLocation="CenterScreen"
        Title="{Binding MapViewModel.WholeMap.Name, StringFormat=City and Roads ({0})}"
        x:Name="mainWindow">

    <DockPanel x:Name="praparent">
        <Menu DockPanel.Dock="Top" 
            Height="25" 
            VerticalAlignment="Top"
            Panel.ZIndex="2">
            <MenuItem 
                Header="Map">
                <MenuItem 
                    Header="Create new" 
                    Command="{Binding ShowCreateMapDialogCommand}"
                    CommandParameter="{Binding ElementName=mainWindow}"/>
                <MenuItem 
                    Header="Select existing"
                    Command="{Binding ShowSelectExistingMapDialogCommand}"
                    CommandParameter="{Binding ElementName=mainWindow}">
                </MenuItem>
            </MenuItem>
            <MenuItem
                Header="Settings"
                Command="{Binding ShowSettingsDialogCommand}"
                CommandParameter="{Binding ElementName=mainWindow}">
            </MenuItem>
        </Menu>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="270"/>
            </Grid.ColumnDefinitions>
            <DockPanel 
                Name="dockPanel_1"
                DockPanel.Dock="Top">
                <StatusBar DockPanel.Dock="Top"
                       Panel.ZIndex="2">
                    <StatusBarItem BorderBrush="#FFCCCCCC" BorderThickness="1,1,1,1">
                        <TextBlock x:Name="stateLine"
                               Text="{Binding AppState.State}"/>
                    </StatusBarItem>
                </StatusBar>
                <uc:MapControl 
                           OffsetValue="{Binding OffsetValue, Mode=TwoWay}"
                           ScaleValue="{Binding ScaleValue, Mode=TwoWay}"
                           MapImageSource="{Binding MapImageSource}"
                           TransformPosition="{Binding TransformPosition, Mode=TwoWay}"
                           ImageHeight="{Binding ImageHeight, Mode=TwoWay}"
                           ImageWidth="{Binding ImageWidth, Mode=TwoWay}"
                           Offset="{Binding Offset, Mode=TwoWay}"
                           PPW="{Binding PPW, Mode=TwoWay}"
                           PPH="{Binding PPH, Mode=TwoWay}"
                           CityCollection ="{Binding MapViewModel.WholeMap.Cities, Mode=TwoWay, IsAsync=True}"
                           SelectedCity="{Binding MapViewModel.SelectedCity, Mode=TwoWay}"
                           RouteCollection ="{Binding MapViewModel.WholeMap.Routes, Mode=TwoWay, IsAsync=True}"
                           SelectedRoute="{Binding MapViewModel.SelectedRoute, Mode=TwoWay}"
                           AppState="{Binding AppState, Mode=TwoWay}"
                           SettingsMap="{Binding MapViewModel.WholeMap.Settings, Mode=TwoWay}"
                           PosX="{Binding PositionViewModel.PanelX, Mode=TwoWay}"
                           PosY="{Binding PositionViewModel.PanelY, Mode=TwoWay}"
                           Path="{Binding Path, Mode=TwoWay}"
                           CanDisplay="{Binding TravelSalesmanViewModel.CanDisplay, Mode=TwoWay}"
                           CitiesPositionOfPath="{Binding ShortestPathViewModel.ShortestPath.CitiesPosition, Mode=TwoWay, IsAsync=True}"
                           SelectedRoutes="{Binding TravelSalesmanViewModel.SelectedRoutes, Mode=TwoWay, IsAsync=True}"/>

            </DockPanel>

            <GridSplitter Width="5" 
                          HorizontalAlignment="Right" 
                          VerticalAlignment="Stretch" 
                          ResizeBehavior="CurrentAndNext"/>
            <DockPanel Grid.Column="1">
                <DockPanel DockPanel.Dock="Right">
                    <TabControl Focusable="True">
                        <TabItem Selector.IsSelected="True">
                            <TabItem.Header>
                                <TextBlock Text="Adding cities and roads">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                            <i:InvokeCommandAction Command="{Binding ChangeTabCommand}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </TextBlock>
                            </TabItem.Header>
                            <TabItem.Content>
                                <StackPanel>
                                    <Grid Margin="2 5 2 5">
                                        <Grid.RowDefinitions>
                                            <RowDefinition  />
                                            <RowDefinition  />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <ToggleButton
                                            Grid.Column="0"
                                            Command ="{Binding AddNewCityCommand}"
                                            IsChecked="{Binding AppState.IsAbleToSetCity}"
                                            VerticalAlignment="Top"
                                            Content="Add a city"
                                            x:Name="AddNewCityButton"
                                            Height="22" Margin="0 0 4 10"/>
                                        <ToggleButton   
                                            Grid.Column="1"
                                            Command ="{Binding AddNewRouteCommand}"
                                            CommandParameter="{Binding ElementName=routeDistance}"
                                            IsChecked="{Binding AppState.IsAbleToPickFirstCity}"
                                            VerticalAlignment="Top"
                                            Content="Add a road"
                                            x:Name="AddNewRouteButton"
                                            Height="22"/>
                                    </Grid>


                                    <Grid 
                                        x:Name ="CreatingCityPanel"
                                        Visibility="{Binding AppState.IsAbleToCreateCity, Converter={StaticResource BooleanToVisibilityConverter}}"
                                        Margin="2 0 2 15"
                                        >
                                        <Grid.RowDefinitions>
                                            <RowDefinition  />
                                            <RowDefinition  />
                                            <RowDefinition  />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>


                                        <Label Grid.Row="1"
                                            Content="City Name: "
                                            Target="{Binding cityName}"
                                             Margin="0,-2,0,0"
                                            />

                                        <TextBox 
                                            Height="25"
                                            Padding="0,2,0,0"
                                            Margin="1,0,1,6"
                                            Grid.Column="1"
                                            Grid.Row="1" 
                                            Text="{Binding MapViewModel.SelectedCity.Name, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                            Validation.ErrorTemplate="{StaticResource ValidationTemplate}"
                                            Style="{StaticResource StyleValidation}"
                                            x:Name="cityName">
                                            <TextBox.InputBindings>
                                                <KeyBinding Command="{Binding CreateNewCityCommand}" Key="ENTER" CommandParameter="{Binding ElementName=cityName, Path=(Validation.HasError)}"/>
                                            </TextBox.InputBindings>
                                        </TextBox>

                                        <Button
                                            Grid.Row="2"
                                            Content="Create"
                                            Command="{Binding CreateNewCityCommand}" 
                                            CommandParameter="{Binding ElementName=cityName, Path=(Validation.HasError)}"
                                            Margin="0,0,4,0"
                                            Height="22">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding (Validation.HasError), ElementName=cityName}" Value="False"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="IsEnabled" Value="True"/>
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>

                                        <Button 
                                            Grid.Column="1"
                                            Grid.Row="2"
                                            Content="Cancel"
                                            Command="{Binding CancelCreatingCityCommand}"
                                            CommandParameter="{Binding ElementName=AddNewCityButton}"
                                            Height="22"/>
                                    </Grid>

                                    <Grid Margin="2 0 2 15"
                                        x:Name ="UpdatingCityPanel"
                                        Visibility="{Binding AppState.IsAbleToUpdateCity, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition  />
                                            <RowDefinition  />
                                            <RowDefinition  />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>

                                        <Label Grid.Row="1"
                                            Content="Update the name: "
                                            Target="{Binding cityNameUpdate}" 
                                            Margin="0,-2,0,0"/>

                                        <TextBox 
                                            Grid.Column="1"
                                            Grid.Row="1" 
                                            Padding="0,2,0,0"
                                            Margin="1,0,1,6"
                                            Text="{Binding MapViewModel.SelectedCity.Name, NotifyOnValidationError=true, ValidatesOnDataErrors=True}"
                                            Validation.ErrorTemplate="{StaticResource ValidationTemplate}"
                                            Style="{StaticResource StyleValidation}"
                                            x:Name="cityNameUpdate" Height="25">
                                            <TextBox.InputBindings>
                                                <KeyBinding Command="{Binding UpdateCityCommand}" Key="ENTER" CommandParameter="{Binding ElementName=cityNameUpdate, Path=(Validation.HasError)}"/>
                                            </TextBox.InputBindings>
                                        </TextBox>

                                        <Button
                                            Grid.Row="2"
                                            Content="Update"
                                            Command="{Binding UpdateCityCommand}"
                                            CommandParameter="{Binding ElementName=cityNameUpdate, Path=(Validation.HasError)}"
                                            Margin="0,0,4,0" Height="22">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="IsEnabled" Value="True"/>
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding Text.Length, ElementName=cityNameUpdate, UpdateSourceTrigger=PropertyChanged}" Value="0"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="IsEnabled" Value="False"/>
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>

                                        <Button 
                                            Grid.Column="1"
                                            Grid.Row="2"
                                            Content="Delete"
                                            Command="{Binding DeleteCityCommand}" VerticalAlignment="Top" Height="22"/>
                                    </Grid>

                                    <Grid 
                                        x:Name="CreatingRoutePanel"
                                        Visibility="{Binding AppState.IsAbleToCreateRoute, Converter={StaticResource BooleanToVisibilityConverter}}"
                                        Margin="2 0 2 15"
                                        >
                                        <Grid.RowDefinitions>
                                            <RowDefinition  />
                                            <RowDefinition  />
                                            <RowDefinition  />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>

                                        <Label Grid.Row="1"
                                            Content="Distance (km): "/>
                                        <TextBox
                                            Grid.Column="1"
                                            Grid.Row="1"      
                                            Height="25"
                                            Padding="0,2,0,0"
                                            Margin="1,0,1,6"
                                            Text="{Binding MapViewModel.SelectedRoute.Distance, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                            Validation.ErrorTemplate="{StaticResource ValidationTemplate}"
                                            Style="{StaticResource StyleValidation}"
                                            x:Name="routeDistance">
                                            <TextBox.InputBindings>
                                                <KeyBinding Command="{Binding CreateNewRouteCommand}" Key="ENTER" CommandParameter="{Binding ElementName=routeDistance, Path=(Validation.HasError)}"/>
                                            </TextBox.InputBindings>
                                        </TextBox>

                                        <Button
                                            Grid.Row="2"
                                            Content="Create"
                                            Command="{Binding CreateNewRouteCommand}"
                                            CommandParameter="{Binding ElementName=routeDistance, Path=(Validation.HasError)}"
                                            Height="22"
                                            Margin="0,0,4,0">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding (Validation.HasError), ElementName=routeDistance}" Value="False"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="IsEnabled" Value="True"/>
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>

                                        <Button 
                                            Grid.Column="1"
                                            Grid.Row="2"
                                            Content="Cancel"
                                            Command="{Binding CancelCreatingRouteCommand}"                                            
                                            CommandParameter="{Binding ElementName=AddNewRouteButton}"
                                            Height="22"
                                            />
                                    </Grid>
                                    <Grid 
                                        Margin="2 0 2 15"
                                        x:Name ="UpdatingRoutePanel"
                                        Visibility="{Binding AppState.IsAbleToUpdateRoute, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition  />
                                            <RowDefinition  />
                                            <RowDefinition  />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>

                                        <Label
                                            Grid.Row="1" 
                                            Content="Update distance (km): "
                                            Target="{Binding routeUpdate}" Margin="0,-2,0,0" VerticalAlignment="Top"/>

                                        <TextBox
                                            Grid.Column="1"
                                            Grid.Row="1"      
                                            Padding="0,2,0,0"
                                            Margin="1,0,1,6"
                                            Text="{Binding MapViewModel.SelectedRoute.Distance, NotifyOnValidationError=true, ValidatesOnDataErrors=True}"
                                            Validation.ErrorTemplate="{StaticResource ValidationTemplate}"
                                            Style="{StaticResource StyleValidation}"
                                            x:Name="routeUpdate" Height="25">
                                            <TextBox.InputBindings>
                                                <KeyBinding Command="{Binding UpdateRouteCommand}" Key="ENTER" CommandParameter="{Binding ElementName=routeUpdate, Path=(Validation.HasError)}"/>
                                            </TextBox.InputBindings>
                                        </TextBox>

                                        <Button
                                            Grid.Row="2"
                                            Content="Update"
                                            Command="{Binding UpdateRouteCommand}"
                                            CommandParameter="{Binding ElementName=routeUpdate, Path=(Validation.HasError)}"
                                            Margin="0,0,4,0" Height="22">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="IsEnabled" Value="True"/>
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding Text.Length, ElementName=routeUpdate, UpdateSourceTrigger=PropertyChanged}" Value="0"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="IsEnabled" Value="False"/>
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>

                                        <Button 
                                            Grid.Column="1"
                                            Grid.Row="2"
                                            Content="Delete"
                                            Command="{Binding DeleteRouteCommand}" VerticalAlignment="Top" Height="22" Grid.ColumnSpan="2"/>
                                    </Grid>
                                </StackPanel>
                            </TabItem.Content>
                        </TabItem>
                        <TabItem>
                            <TabItem.Header>
                                <TextBlock Text="Shortest path">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                            <i:InvokeCommandAction Command="{Binding ChangeTabCommand}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </TextBlock>
                            </TabItem.Header>
                            <DockPanel LastChildFill="True">
                                  <ToggleButton DockPanel.Dock="Top" Margin="0,5,0,10"
                                              Content="Start selection" 
                                              Grid.Row="0"
                                              Grid.ColumnSpan="2"
                                              IsChecked="{Binding AppState.IsAbleToPickShortestPath}"
                                              Command="{Binding ShortestPathResolveCommand}"
                                              CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}"
                                              x:Name="PathResolverButton" Height="22">
                                </ToggleButton>
                                <StackPanel x:Name="ShortestPathPanel" 
                                            DockPanel.Dock="Top">
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsChecked,ElementName=PathResolverButton}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>

                                    <Grid DockPanel.Dock="Top">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="1*" />
                                            <ColumnDefinition Width="1*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="1*" />
                                            <RowDefinition Height="1*" />
                                        </Grid.RowDefinitions>
                                        <Button 
                                            x:Name="solveButton"
                                            Content="Solve"
                                            Grid.Row="0" Grid.Column="0"
                                            Command="{Binding CalculateShortestPathCommand}"                                            
                                            IsEnabled="{Binding AppState.IsAbleToFindShortestPath}"/>
                                        <Button 
                                            Content="Cancel" 
                                            Grid.Row="0" 
                                            Grid.Column="1" 
                                            Command="{Binding PathResolverCancelCommand}"
                                            CommandParameter="{Binding ElementName=PathResolverButton}"
                                            x:Name="CancelPathResolver"
                                            />
                                    </Grid>
                                </StackPanel>

                                <uc:ConsoleControl DataContext="{Binding ShortestPathViewModel}"
                                               ConsoleContent="{Binding ConsoleResult,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </DockPanel>
                        </TabItem>
                        <TabItem>
                            <TabItem.Header>
                                <TextBlock Text="Travel salesman">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                            <i:InvokeCommandAction Command="{Binding ChangeTabCommand}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </TextBlock>
                            </TabItem.Header>
                            <DockPanel LastChildFill="True"
                                       >
                                <ToggleButton DockPanel.Dock="Top"  Margin="0,5,0,10"
                                              Content="Start selection"
                                              IsChecked="{Binding TravelSalesmanViewModel.CanSelectCities}"
                                              IsEnabled="{Binding TravelSalesmanViewModel.TravelsalesmanAcces}"
                                              Command="{Binding TravelSalesmanStartCommand}"
                                              x:Name="travelsalesmanSelectButton" Height="22"/>

                                <StackPanel  DockPanel.Dock="Top">
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsChecked,ElementName=travelsalesmanSelectButton}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="1*" />
                                            <ColumnDefinition Width="1*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="1*" />
                                            <RowDefinition Height="1*" />
                                            <RowDefinition Height="1*" />
                                        </Grid.RowDefinitions>
                                        <TextBlock Grid.ColumnSpan="2" 
                                                   Text="Select an algorithm:"/>
                                        <ComboBox Grid.Row="1" Grid.ColumnSpan="2" Margin="0,0,0,20"
                                                  SelectedIndex="{Binding TravelSalesmanViewModel.SelectedMethodIndex}" 
                                                  IsEnabled="{Binding TravelSalesmanViewModel.TravelsalesmanAcces}">
                                            <ComboBoxItem Content="Annealing"/>
                                            <ComboBoxItem Content="Nearest" />
                                            <ComboBoxItem Content="Quickest"/>
                                        </ComboBox>
                                        <Button Content="Cancel" 
                                                Grid.Row="2" Grid.Column="1" 
                                                Command="{Binding TravelSalesmanCancelCommand}"/>
                                        <Button Content="Solve"
                                                Grid.Row="2" Grid.Column="0"
                                                Command="{Binding ResolveTravelSalesmanCommand}"/>
                                    </Grid>
                                </StackPanel>
                                <uc:ConsoleControl ConsoleContent="{Binding TravelSalesmanViewModel.ConsoleResult, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </DockPanel>
                        </TabItem>
                    </TabControl>
                </DockPanel>
            </DockPanel>
        </Grid>
    </DockPanel>
</Window>
