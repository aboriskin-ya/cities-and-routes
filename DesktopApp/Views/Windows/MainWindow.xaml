<Window x:Class="DesktopApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"       
        xmlns:uc="clr-namespace:DesktopApp.UserControls"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"        
        Title="MainWindow" Height="720" Width="1280" WindowStartupLocation="CenterScreen">
    <DockPanel x:Name="praparent">
        <Menu DockPanel.Dock="Top" 
            Height="25" 
            VerticalAlignment="Top"
            Panel.ZIndex="2">
            <MenuItem 
                Header="Map">
                <MenuItem 
                    Header="Create new" 
                    Command="{Binding ShowCreateMapDialogCommand}"/>
                <MenuItem 
                    Header="Select existing"
                    Command="{Binding ShowSelectExistingMapDialogCommand}">
                </MenuItem>
            </MenuItem>
        </Menu>
        <DockPanel DockPanel.Dock="Right" Width="200">
            <TabControl>
                <TabItem>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                            <i:InvokeCommandAction Command="{Binding AddingCitiesRoutesOpenCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <TabItem.Header>
                        <TextBlock Text="Adding cities and routes"></TextBlock>
                    </TabItem.Header>
                    <TabItem.Content>
                        <StackPanel Background="#FFF0F0F0">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition  />
                                    <RowDefinition  />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Button
                                    Grid.Column="0"
                                    Command ="{Binding AddNewCityCommand}"
                                    VerticalAlignment="Top"
                                    Content="Add a city"/>
                                <Button                    
                                    Grid.Column="1"
                                    Command ="{Binding AddNewRouteCommand}"
                                    VerticalAlignment="Top"
                                    Content="Add a route"/>
                            </Grid>

                            <Grid x:Name ="CreatingCityPanel"
                                Visibility="{Binding AppState.IsAbleToCreateCity, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition  />
                                    <RowDefinition  />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <Label
                                    Content="City Name: "
                                    Target="{Binding cityName}"/>

                                <TextBox 
                                    DataContext="{Binding MapViewModel}"
                                    Grid.Column="1"
                                    Text="{Binding SelectedCity.Name, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                    Validation.ErrorTemplate="{StaticResource ValidationTemplate}"
                                    Style="{StaticResource StyleValidation}"
                                    x:Name="cityName"/>

                                <Button
                                    Grid.Row="1"
                                    Content="Create"
                                    Command="{Binding CreateNewCityCommand}" Margin="-1,0,2,0">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="IsEnabled" Value="False"/>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding (Validation.HasError), ElementName=cityName}" Value="False"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="IsEnabled" Value="True"/>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>

                                <Button 
                                    Grid.Column="1"
                                    Grid.Row="1"
                                    Content="Cancel"
                                    Command="{Binding CancelCreatingCityCommand}"/>
                            </Grid>

                            <Grid x:Name ="UpdatingCityPanel"
                                Visibility="{Binding AppState.IsAbleToUpdateCity, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition  />
                                    <RowDefinition  />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <Label
                                    Content="Update the name: "
                                    Target="{Binding cityNameUpdate}" Grid.ColumnSpan="2" Margin="0,-2,10,44" Grid.RowSpan="2"/>

                                <TextBox 
                                    DataContext="{Binding MapViewModel}"
                                    Text="{Binding SelectedCity.Name, NotifyOnValidationError=true, ValidatesOnDataErrors=True}"
                                    Validation.ErrorTemplate="{StaticResource ValidationTemplate}"
                                    Style="{StaticResource StyleValidation}"
                                    x:Name="cityNameUpdate" Margin="1,20,1,37" Grid.ColumnSpan="2" Grid.Row="1" Height="25"/>

                                <Button
                                    Grid.Row="1"
                                    Content="Update"
                                    Command="{Binding UpdateCityCommand}" Margin="-1,51,2,10" Height="22">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="IsEnabled" Value="True"/>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Text.Length, ElementName=cityNameUpdate, UpdateSourceTrigger=PropertyChanged}" Value="0"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>

                                <Button 
                                    Grid.Column="1"
                                    Grid.Row="1"
                                    Content="Delete"
                                    Command="{Binding DeleteCityCommand}" Margin="0,51,0,0" VerticalAlignment="Top" Height="22"/>
                            </Grid>

                            <Grid x:Name="CreatingRoutePanel"
                                Visibility="{Binding AppState.IsAbleToCreateRoute, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition  />
                                    <RowDefinition  />
                                    <RowDefinition  />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <TextBlock 
                                    DataContext="{Binding MapViewModel}" 
                                    Grid.Column="0"
                                    Text="{Binding SelectedRoute.FirstCity.Name}"/>
                                <TextBlock 
                                    DataContext="{Binding MapViewModel}" 
                                    Grid.Column="1" 
                                    Text="{Binding SelectedRoute.SecondCity.Name}"/>

                                <Label Grid.Row="1"
                                    Content="Distance: "/>
                                <TextBox 
                                    DataContext="{Binding MapViewModel}"
                                    Grid.Column="1"
                                    Grid.Row="1"                        
                                    Text="{Binding SelectedRoute.Distance, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                    Validation.ErrorTemplate="{StaticResource ValidationTemplate}"
                                    Style="{StaticResource StyleValidation}"
                                    x:Name="routeDistance">
                                </TextBox>

                                <Button
                                    Grid.Row="2"
                                    Content="Create"
                                    Command="{Binding CreateNewRouteCommand}" Margin="-1,0,2,0">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="IsEnabled" Value="False"/>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding (Validation.HasError), ElementName=routeDistance}" Value="False"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="IsEnabled" Value="True"/>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>

                                <Button 
                                    Grid.Column="1"
                                    Grid.Row="2"
                                    Content="Cancel"
                                    Command="{Binding CancelCreatingRouteCommand}"/>
                            </Grid>
                            <TextBlock Text="{Binding WholeMap.Name}"/>
                        </StackPanel>
                    </TabItem.Content>
                </TabItem>

                <TabItem>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                            <i:InvokeCommandAction Command="{Binding PathResolverOpenCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <TabItem.Header>
                        <TextBlock Text="Shortest path"></TextBlock>
                    </TabItem.Header>
                    <TabItem.Content>
                        <StackPanel>
                            <TextBlock>
                            <Run Text="Distance:"/>
                                <LineBreak/>
                            <Run Text="{Binding ShortestPathViewModel.ShortestPath.FinalDistance}"/>
                                <LineBreak/>
                            <Run Text="Execution time:"/>
                                <LineBreak/>
                            <Run Text="{Binding ShortestPathViewModel.ShortestPath.ProcessDuration}"/>
                                <LineBreak/>
                            </TextBlock>
                            <Button Content="Calculate the shortest path"
                                    Command="{Binding CalculateShortestPathCommand}"/>
                        </StackPanel>
                    </TabItem.Content>
                </TabItem>
            </TabControl>
        </DockPanel>
        <DockPanel 
            DockPanel.Dock="Top">
            <StatusBar DockPanel.Dock="Top"
                       Panel.ZIndex="2">
                <StatusBarItem BorderBrush="#FFCCCCCC" BorderThickness="1,1,1,1">
                    <TextBlock x:Name="stateLine"
                               Text="{Binding AppState.State}"/>
                </StatusBarItem>
            </StatusBar>
            <uc:MapControl OffsetValue="{Binding OffsetValue, Mode=TwoWay}"
                           ScaleValue="{Binding ScaleValue, Mode=TwoWay}"
                           MapImageSource="{Binding MapImageSource}"
                           TransformPosition="{Binding TransformPosition, Mode=TwoWay}"
                           ImageHeight="{Binding ImageHeight, Mode=TwoWay}"
                           ImageWidth="{Binding ImageWidth, Mode=TwoWay}"
                           Offset="{Binding Offset, Mode=TwoWay}"
                           PPW="{Binding PPW, Mode=TwoWay}"
                           PPH="{Binding PPH, Mode=TwoWay}"
                           CityCollection ="{Binding MapViewModel.WholeMap.Cities, Mode=TwoWay, IsAsync=True}"
                           SelectedCity="{Binding MapViewModel.SelectedCity, Mode=TwoWay}"
                           RouteCollection ="{Binding MapViewModel.WholeMap.Routes, Mode=TwoWay, IsAsync=True}"
                           SelectedRoute="{Binding MapViewModel.SelectedRoute, Mode=TwoWay}"
                           AppState="{Binding AppState, Mode=TwoWay}"
                           SettingsMap="{Binding MapViewModel.WholeMap.Settings, Mode=TwoWay}"
                           PosX="{Binding PositionViewModel.PanelX, Mode=TwoWay}"
                           PosY="{Binding PositionViewModel.PanelY, Mode=TwoWay}"
                           Path="{Binding Path, Mode=TwoWay}"
                           CitiesPositionOfPath="{Binding ShortestPathViewModel.ShortestPath.CitiesPosition, Mode=TwoWay, IsAsync=True}"/>
        </DockPanel>
    </DockPanel>

</Window>
