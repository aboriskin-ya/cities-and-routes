<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"       
        xmlns:uc="clr-namespace:DesktopApp.UserControllers"
        xmlns:av="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="av" x:Class="DesktopApp.MainWindow"
        Title="MainWindow" Height="450" Width="833">
    <DockPanel x:Name="praparent">
        <Menu DockPanel.Dock="Top" 
            Height="25" 
            VerticalAlignment="Top"
            Panel.ZIndex="2">
            <MenuItem 
                Header="Map">
                <MenuItem 
                    Header="Create new" 
                    Command="{Binding ShowCreateMapDialogCommand}"/>
                <MenuItem 
                    Header="Select existing" />
            </MenuItem>
        </Menu>
        <DockPanel DockPanel.Dock="Right" Width="156">
            <StackPanel Background="#FFF0F0F0" Width="155">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition  />
                        <RowDefinition  />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Button
                        Grid.Column="0"
                        Command ="{Binding AddNewCityCommand}"
                        VerticalAlignment="Top"
                        Content="Add a city"/>
                    <Button                    
                        Grid.Column="1"
                        Command ="{Binding AddNewRouteCommand}"
                        VerticalAlignment="Top"
                        Content="Add a route"/>
                    <Button                    
                        Grid.Row="1"
                        Grid.ColumnSpan="2"
                        Content ="Calculate optimal route" Margin="0,7,0,15" VerticalAlignment="Top"/>
                </Grid>

                <Grid x:Name ="CreatingCityPanel"
                    Visibility="{Binding AppState.IsAbleToCreateCity, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition  />
                        <RowDefinition  />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Label
                        Content="City Name: "
                        Target="{Binding cityName}"/>

                    <TextBox 
                        DataContext="{Binding MapViewModel}"
                        Grid.Column="1"
                        Text="{Binding SelectedCity.Name, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                        Validation.ErrorTemplate="{StaticResource ValidationTemplate}"
                        Style="{StaticResource StyleValidation}"
                        x:Name="cityName"/>

                    <Button
                        Grid.Row="1"
                        Content="Create"
                        Command="{Binding CreateNewCityCommand}" Margin="-1,0,2,0">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding (Validation.HasError), ElementName=cityName}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Button 
                        Grid.Column="1"
                        Grid.Row="1"
                        Content="Cancel"
                        Command="{Binding CancelCreatingCityCommand}"/>
                </Grid>

                <Grid x:Name ="UpdatingCityPanel"
                    Visibility="{Binding AppState.IsAbleToUpdateCity, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition  />
                        <RowDefinition  />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Label
                        Content="Update the name: "
                        Target="{Binding cityNameUpdate}" Grid.ColumnSpan="2" Margin="0,-2,10,44" Grid.RowSpan="2"/>

                    <TextBox 
                        DataContext="{Binding MapViewModel}"
                        Text="{Binding SelectedCity.Name, NotifyOnValidationError=true, ValidatesOnDataErrors=True}"
                        Validation.ErrorTemplate="{StaticResource ValidationTemplate}"
                        Style="{StaticResource StyleValidation}"
                        x:Name="cityNameUpdate" Margin="1,20,1,37" Grid.ColumnSpan="2" Grid.Row="1" Height="25"/>

                    <Button
                        Grid.Row="1"
                        Content="Update"
                        Command="{Binding UpdateCityCommand}" Margin="-1,51,2,10" Height="22">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="IsEnabled" Value="True"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Text.Length, ElementName=cityNameUpdate, UpdateSourceTrigger=PropertyChanged}" Value="0"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Button 
                        Grid.Column="1"
                        Grid.Row="1"
                        Content="Delete"
                        Command="{Binding DeleteCityCommand}" Margin="0,51,0,0" VerticalAlignment="Top" Height="22"/>
                </Grid>

                <Grid x:Name="CreatingRoutePanel"
                    Visibility="{Binding AppState.IsAbleToCreateRoute, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition  />
                        <RowDefinition  />
                        <RowDefinition  />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <TextBlock 
                        DataContext="{Binding MapViewModel}" 
                        Grid.Column="0"
                        Text="{Binding SelectedRoute.FirstCity.Name}"/>
                    <TextBlock 
                        DataContext="{Binding MapViewModel}" 
                        Grid.Column="1" 
                        Text="{Binding SelectedRoute.SecondCity.Name}"/>

                    <Label Grid.Row="1"
                        Content="Distance: "/>
                    <TextBox 
                        DataContext="{Binding MapViewModel}"
                        Grid.Column="1"
                        Grid.Row="1"                        
                        Text="{Binding SelectedRoute.Distance, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                        Validation.ErrorTemplate="{StaticResource ValidationTemplate}"
                        Style="{StaticResource StyleValidation}"
                        x:Name="routeDistance"/>

                    <Button
                        Grid.Row="2"
                        Content="Create"
                        Command="{Binding CreateNewRouteCommand}" Margin="-1,0,2,0">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding (Validation.HasError), ElementName=routeDistance}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Button 
                        Grid.Column="1"
                        Grid.Row="2"
                        Content="Cancel"
                        Command="{Binding CancelCreatingRouteCommand}"/>
                </Grid>
            </StackPanel>
        </DockPanel>
        <DockPanel 
            DockPanel.Dock="Top" Width="674">
            <StatusBar DockPanel.Dock="Top"
                       Panel.ZIndex="2">
                <StatusBarItem BorderBrush="#FFCCCCCC" BorderThickness="1,1,1,1">
                    <TextBlock x:Name="stateLine"
                               Text="{Binding AppState.State}"/>
                </StatusBarItem>
            </StatusBar>
            <uc:MapControl OffsetValue="{Binding OffsetValue, Mode=TwoWay}"
                           ScaleValue="{Binding ScaleValue, Mode=TwoWay}"
                           MapImageSource="{Binding MapImageSource}"
                           TransformPosition="{Binding TransformPosition, Mode=TwoWay}"
                           ImageHeight="{Binding ImageHeight, Mode=TwoWay}"
                           ImageWidth="{Binding ImageWidth, Mode=TwoWay}"
                           Offset="{Binding Offset, Mode=TwoWay}"
                           PPW="{Binding PPW, Mode=TwoWay}"
                           PPH="{Binding PPH, Mode=TwoWay}"
                           CityCollection ="{Binding MapViewModel.CityCollection, IsAsync=True, Mode=TwoWay}"
                           SelectedCity="{Binding MapViewModel.SelectedCity, Mode=TwoWay}"
                           RouteCollection ="{Binding MapViewModel.RouteCollection, IsAsync=True, Mode=TwoWay}"
                           SelectedRoute="{Binding MapViewModel.SelectedRoute, Mode=TwoWay}"
                           AppState="{Binding AppState, Mode=TwoWay}"
                           SettingsMap="{Binding MapViewModel.SettingsMap, Mode=TwoWay}"
                           PosX="{Binding PositionViewModel.PanelX, Mode=TwoWay}"
                           PosY="{Binding PositionViewModel.PanelY, Mode=TwoWay}" HorizontalAlignment="Left" HorizontalContentAlignment="Stretch" Width="670" BorderBrush="Black"/>
        </DockPanel>
    </DockPanel>

</Window>
